version: '3.7'

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: server-node-app
    container_name: server-app
    #command: /src/app/node_modules/ .bin/nodemon server.js
    command: npm run dev
    volumes:
      - ./server/:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - mongo
  
    environment:
      - NODE_ENV=development
    networks:
      - app-network
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - data-volume:/db
    ports:
      - "27017:27017"
    networks:
      - app-network
  
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongo://root:example@mongo:27017/
    depends_on:
      - mongo

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: client-react-app
    container_name: client-app
    command: npm run start
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "8000:8000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  data-volume:
  node_modules:
  web-root:
    driver: local
